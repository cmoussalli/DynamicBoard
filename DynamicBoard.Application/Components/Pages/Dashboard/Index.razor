@page "/Dashboards"
@using DynamicBoard.Application.DomainServices
@using DynamicBoard.DataServices
@rendermode InteractiveServer

<DashboardList>
</DashboardList>
@code {
    DynamicBoardDashboardServices dashboardServices = new();
    List<Dashboards> dashboards = new();
    public IQueryable<Dashboards>? DashboardList;
    PaginationState pagination = new PaginationState { ItemsPerPage = 3 };


    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        DashboardsAll();
        pagination.TotalItemCountChanged += (sender, eventArgs) => StateHasChanged();
        await base.OnInitializedAsync();

    }
    public IQueryable<Dashboards> DashboardsAll()
    {
        dashboards = dashboardServices.DashboardsAll();
        DashboardList = dashboards?.AsQueryable();
        return DashboardList;
    }
    private async Task GoToPageAsync(int pageIndex)
    {
        await pagination.SetCurrentPageIndexAsync(pageIndex);
    }

    private Appearance PageButtonAppearance(int pageIndex)
        => pagination.CurrentPageIndex == pageIndex ? Appearance.Accent : Appearance.Neutral;

    private string? AriaCurrentValue(int pageIndex)
        => pagination.CurrentPageIndex == pageIndex ? "page" : null;

    private string AriaLabel(int pageIndex) => $"Ir para pag. {pageIndex}";
}
