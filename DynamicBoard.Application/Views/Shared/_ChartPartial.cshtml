<!-- ChartPartial.cshtml -->
@using DynamicBoard.Application.Model
@using DynamicBoard.Models
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@model DynamicBoard.Application.Model.RenderChart
@if (Model.HideChartButtons == false)
{
	@if (Model.IsAllowRefresh)
	{
		<img src="~/images/refresh.png" id="refreshButton_@Model.ChartID" class="refreshbutton" onclick="refreshButton(this)"
			 data-chart-id="@Model.ChartID"
			 data-refresh-time="@Model.RefershTime"
			 data-chart-type="@Model.ChartType"
			 data-json-axis-labels="@System.Text.Json.JsonSerializer.Serialize(string.IsNullOrEmpty(@Model?.JsonXaxis_labels) ? "null" :@Model?.JsonXaxis_labels)"
			 data-json-graph-configurations="@System.Text.Json.JsonSerializer.Serialize(string.IsNullOrEmpty(Model?.json_graphConfigurations) ? "null" :Model?.json_graphConfigurations)"
			 data-json-chart-title="@Html.Raw(string.IsNullOrEmpty(Model?.jsonchartTitle) ? "null" : Model?.jsonchartTitle)"
			 alt="Refresh" style="float: right; width: 20px;">
	}
	@if (Model.IsAllowPrint)
	{
		@if (Model.ChartType != "Label")
		{
			<img src="~/images/printer.png" onclick="printElement('div_@Model.ChartID','')" class="printbutton" alt="printer" style="float: right; width: 25px;">
		}
		else
		{
			<img src="~/images/printer.png" onclick="printElement('div_@Model.ChartID','Label')" class="printbutton" alt="printer" style="float: right; width: 25px;">
		}
	}
}
<img id="loader_@Model.ChartID" class="loader" src="~/images/Spinne.gif" />

<div id="div_@Model.ChartID" style="display: flex;justify-content: center;align-items: center; @(Model.ChartType != "Label"? (Model.ChartHeight>300? "height:"+Model.ChartHeight+"px;":"height:300px;"):"")">

	@if (Model.ChartType == "Label")
	{
		<div style="display: flex;justify-content:center;">
			<h3 style="color:#1C459D">@Model.jsonchartTitle.Replace("\"", "")</h3>
		</div>
		<div style="display: flex;justify-content:center;">
			<h3 style="margin: auto;font-size: 35px;font-style: inherit;text-align: center;color:#C1A968" id="Label_@Model.ChartID">@Model.LabelValue</h3>
		</div>
	}
	else if (Model.ChartType == "Progress Pie Chart")
	{
		<div id="Progress-@Model.ChartID"></div>

	}
	else if (Model.ChartType == "Data Grid")
	{
		<div id="Grid-@Model.ChartID"></div>
		@if (Model.dataGrid is not null)
		{
			<button id="exportBtn" class="btn btn-primary" style="float:right; background-color:#a58d63; border-color:#a58d63;">
				Export to Excel
			</button>
			<br />
			<div>
				<p style="visibility: hidden;">Hidden</p>
			</div>
			<table id="tbl" class="table table-hover align-middle mb-0">
				<thead class="table-dark" style="color: #fff; background-color: #343a40; border-color: #484e53;">
					<tr>
						@foreach (var key in Model.dataGrid[0].Keys)
						{
							<th>@key</th>

						}
					</tr>
				<tbody>
						@foreach (var row in Model.dataGrid)
						{
						<tr style="background-color:#fcf0db;">
								@foreach (var value in row.Values)
								{
								<td>@value</td>
								}
						</tr>
						}
				</tbody>
			</table>
		}
	}
	else
	{
		<canvas id="canvas_@Model.ChartID" width="405px" height="450px"></canvas>
	}
</div>
<script type="text/javascript" charset="utf-8">
			document.getElementById("exportBtn").addEventListener("click", function () {
			var table = document.getElementById("tbl");
			var headers = [];
			var rows = [];
			// Extract headers
			var headerCells = table.querySelectorAll("thead th");
			headerCells.forEach(function (th) {
				headers.push(th.textContent.trim());
			});

			var rowElements = table.querySelectorAll("tbody tr");
			rowElements.forEach(function (tr) {
				var rowData = {};
				var cells = tr.querySelectorAll("td");
				cells.forEach(function (td, index) {
					rowData[headers[index]] = td.textContent.trim();
				});
				rows.push(rowData);
			});

				var tableData = {
				Headers: headers,
				Rows: rows
			};



		fetch("/Chart/ExportToExcel", {
			method: "POST",
			headers: { "Content-Type": "application/json" },
			body:JSON.stringify ({Headers:headers,Rows:rows})
		})
		.then(response => response.blob())
		.then(blob => {
			var url = window.URL.createObjectURL(blob);
			var a = document.createElement("a");
			a.href = url;
			a.download = "ExportedData.xlsx";
			document.body.appendChild(a);
			a.click();
			document.body.removeChild(a);
		})
		.catch(error => console.error("Export failed", error));

	});
</script>
