@page "/DashboardIndex"
@using SME.DynamicBoard.UI
@using SME.DynamicBoard.UI.Components
 

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<input type="text" @bind="@dashboardID" placeholder="Enter dashboardID" />
<input type="text" @bind="@language" placeholder="Enter Language " />
<button type="button" @onclick="@LoadIframeV3">Load Iframe</button>

<br />
<br />
<br />
@if (dashboardID!="" && dashboardID!="0")
{              
    <SME.DynamicBoard.UI.Components.DashboardRenderView Language=@language AutoLoad="true" DashboardId="@dashboardID" dashboardData="EmptyDashboardData" />
}

@code {

    public DashboardData DashboardData { get; set; } = new();
    static string dashboardID = "";
    public int language = 2;
    public SME.DynamicBoard.UI.DashboardData EmptyDashboardData { get; set; } = new();


    //  public ChartData ChartDataForNewRequest { get; set; } = new();
    public ChartData ChartData { get; set; } = new();
    static string chartID = "4";
    static string chartIDLable = "99";





    public SME.DynamicBoard.UI.ChartData EmptyChartData { get; set; } = new();
    public SME.DynamicBoard.UI.ChartData ChartDataForNewRequest { get; set; } = new();
    public SME.DynamicBoard.UI.ChartData ChartDataForPendingRequest { get; set; } = new();
    public SME.DynamicBoard.UI.ChartData ChartDataForIssuedRequest { get; set; } = new();
    public SME.DynamicBoard.UI.ChartData ChartDataForRejectedRequest { get; set; } = new();

    string chartIdForNewRequest = "128";
    string chartIdForPendingRequest = "104";
    string chartIdForIssuedRequest = "106";
    string chartIdForRejectedRequest = "107";
    string crNo = "1006414";
    protected override async Task OnInitializedAsync()
    {

    }


    public async Task LoadIframeV3()
    {
        ChartDataForNewRequest = new();

        EmptyDashboardData = new();
        //ChartData.ReplaceValue("CRNombers", "1006414", "7058926");
        ChartData.Add("CRNombers", new List<string> { crNo });
        ChartData.Add("IsServiceEnded", new List<string> { "0" });

        //EmptyDashboardData.Add("CRNombers", new List<string> { crNo });
        EmptyDashboardData.Add("IsExpire", new List<string> { "1" });

        // ChartData2.Add("YearOfEstablishment", new List<string> { "2023" });


       // ChartDataForNewRequest.Add("StartupsNewRequestStatus", new List<string> { "2" });

        // if (chartRenderView1 is not null)
        // {
        //     await chartRenderView1.Refersh();
        // }
        ChartDataForNewRequest = new();
        ChartDataForPendingRequest = new();
        ChartDataForIssuedRequest = new();
        ChartDataForRejectedRequest = new();

        ChartDataForNewRequest.Add("StartupsNewRequestStatus", new List<string> { "2" });
        ChartDataForPendingRequest.Add("StartupsPendingRequestIds", new List<string> { "4", "5", "6", "7", "8", "9" });
        ChartDataForIssuedRequest.Add("StartupsIssuedRequestID", new List<string> { "10" });
        ChartDataForRejectedRequest.Add("StartupsRejectedRequest", new List<string> { "3" });
        
        StateHasChanged();
    }


}
